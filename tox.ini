[tox]
# We want an envlist like
# envlist = {py36,py37,pypy3}-{test}-{deps,mindeps}-{,mpi}-{,pre},nightly,docs,checkreadme,pre-commit
# but we want to skip mpi and pre by default, so this envlist is below
envlist = {py310,py311,py312,py313,py313t,py314,py314t,pypy3}-{test}-{deps,mindeps},nightly,docs,apidocs,checkreadme,pre-commit
isolated_build = True
minversion = 4.22.0 # for dependency_groups
# tox-uv is required for `mindeps` and `pre` factors, however, we allow for it
# to be missing because of a puzzling build error that only happens when tox-uv
# is present, specifically on Azure CI (Windows), where we don't need `mindeps` or `pre`.
#requires =
#    tox-uv >= 1.27.0

[testenv]
dependency_groups =
    test: test
    tables: tables
    mpi: mpi

# see pytest.ini for additional common options to pytest
commands =
    test: python -c "import sys; print('64 bit?', sys.maxsize > 2**32)"
    test: python {toxinidir}/ci/fix_paths.py
    test: python -c "from h5py.version import info; print(info)"
    test-!mpi: python -m pytest --pyargs h5py --cov=h5py -rxXs --cov-config={toxinidir}/.coveragerc {posargs}
    test-mpi: mpirun --use-hwthread-cpus -n {env:MPI_N_PROCS:2} {envpython} -m pytest --pyargs h5py -rxXs --with-mpi {posargs}
changedir =
    test: {toxworkdir}
passenv =
    H5PY_SYSTEM_LZF
    H5PY_TEST_CHECK_FILTERS
    HDF5_DIR
    HDF5_VERSION
    HDF5_INCLUDEDIR
    HDF5_LIBDIR
    HDF5_PKGCONFIG_NAME
    HDF5_MPI
    MPI_N_PROCS
    OMPI_* # used to configure OpenMPI
    CC
    ZLIB_ROOT
    CIBUILDWHEEL
allowlist_externals =
    mpirun
setenv =
    COVERAGE_FILE={toxinidir}/.coverage_dir/coverage-{envname} # needed otherwise coverage cannot find the file when reporting
    pre: UV_INDEX=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
    pre: UV_INDEX_STRATEGY=unsafe-best-match  # match pip's behavior
uv_resolution =
    mindeps: lowest-direct
    !mindeps: highest
pip_pre =
    pre: True

[testenv:nightly]
pip_pre = True
basepython = python3.10

[testenv:docs]
skip_install=True
changedir=docs
deps=
    -r docs/requirements-rtd.txt
commands=
    sphinx-build -W -b html -d {envtmpdir}/doctrees .  {envtmpdir}/html

[testenv:apidocs]
changedir=docs_api
dependency_groups =
    docs
commands=
    sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:checkreadme]
skip_install=True
dependency_groups =
    check-readme
commands=
    python -m build --sdist
    twine check --strict dist/*

[testenv:checkmanifest]
skip_install=True
dependency_groups=
    check-manifest
commands=
    check-manifest -v

[testenv:pre-commit]
skip_install=True
dependency_groups =
    lint
passenv =
    HOMEPATH
    SSH_AUTH_SOCK
commands=
    pre-commit run --all-files
