# from matplotlib's azure setup

variables:
  HDF5_CACHE_DIR: $(Pipeline.Workspace)/cache/hdf5
  PIP_CACHE_DIR: $(Pipeline.Workspace)/cache/pip
  CCACHE_DIR: $(Pipeline.Workspace)/cache/ccache

jobs:
- job: 'static_checks'
  pool:
    vmImage: ubuntu-22.04
  variables:
    TOXENV: docs,checkreadme,rever
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        architecture: 'x64'
    - script: |
        pip install tox
      displayName: Install tox
    - script: |
        tox
      displayName: tox

- job: 'ubuntu'
  pool:
    vmImage: ubuntu-22.04
  strategy:
    matrix:
      # -deps : test with default (latest) versions of dependencies
      # -mindeps : test with oldest supported version of (python) dependencies
      # -deps-pre : test pre-release versions of (python) dependencies)
      # -tables : also check compatibility with pytables
    # HDF5 installed from apt on Ubuntu
    # test when we're not in a unicode locale
      py39-Clocale:
        python.version: '3.9'
        TOXENV: py39-test-deps
        TOX_TESTENV_PASSENV: LANG LC_ALL
        LANG: C
        LC_ALL: C
        H5PY_ENFORCE_COVERAGE: yes
    # Build HDF5 1.10 or 1.12 in the test environment
      py39-deps-hdf51107:
        python.version: '3.9'
        TOXENV: py39-test-deps
        HDF5_VERSION: 1.10.7
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py39-deps-hdf51120:
        python.version: '3.9'
        TOXENV: py39-test-deps
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py39-deps-hdf51122:
        python.version: '3.9'
        TOXENV: py39-test-deps
        HDF5_VERSION: 1.12.2
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py310-deps-hdf51146:
        python.version: '3.10'
        TOXENV: py310-test-deps
        HDF5_VERSION: 1.14.6
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
    # do mpi tests
      py39-deps-hdf51122-mpi:
        python.version: '3.9'
        TOXENV: py39-test-mindeps-mpi4py
        HDF5_VERSION: 1.12.2
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_MPI: ON
        CC: mpicc
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        platform: linux
        installer: apt
        shell: unix

- job: 'Windows'
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
    # -deps : test with default (latest) versions of dependencies
    # -mindeps : test with oldest supported version of (python) dependencies
    # -deps-pre : test pre-release versions of (python) dependencies)
    #
    # 64 bit - HDF5 1.10
      py39-hdf5110:
        python.version: '3.9'
        TOXENV: py39-test-deps,py39-test-mindeps,py39-test-deps-pre
        HDF5_VERSION: 1.10.6
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "16-64"
        H5PY_ENFORCE_COVERAGE: yes
    # 64 bit - HDF5 1.12
    # Fewer combinations here; test_windows_wheels also tests HDF5 1.12
      py39-hdf5112:
        python.version: '3.9'
        TOXENV: py39-test-deps
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "16-64"
        H5PY_ENFORCE_COVERAGE: yes
    # 64 bit - HDF5 1.14
      py310-hdf5114:
        python.version: '3.10'
        TOXENV: py310-test-deps
        HDF5_VERSION: 1.14.2
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "16-64"
        H5PY_ENFORCE_COVERAGE: yes
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        platform: windows
        installer: nuget
        shell: cmd

- job: 'macOS'
  pool:
    vmImage: macOS-latest
  timeoutInMinutes: 70  # 60 is a little short for macOS sometimes
  strategy:
    matrix:
      # -deps : test with default (latest) versions of dependencies
      # -mindeps : test with oldest supported version of (python) dependencies
      # -deps-pre : test pre-release versions of (python) dependencies)
      py39:
        python.version: '3.9'
        TOXENV: py39-test-deps,py39-test-mindeps,py39-test-deps-pre
        H5PY_ENFORCE_COVERAGE: yes
      py310:
        python.version: '3.10'
        TOXENV: py310-test-deps
        H5PY_ENFORCE_COVERAGE: yes
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        platform: macos
        installer: brew
        shell: unix
